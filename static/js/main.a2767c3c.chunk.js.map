{"version":3,"sources":["helpers.js","clock.svg","App.js","serviceWorker.js","index.js"],"names":["daysOfTheWeek","transformToSortedWeekTimes","pipe","toPairs","map","_ref","_ref2","Object","slicedToArray","day","times","_ref3","type","value","indexOf","flatten","sortBy","prop","filterByType","filterType","filter","_ref4","getOpeningTimes","zip","_ref5","_ref7","_ref6","a","b","defineProperty","resultTimes","groupBy","_ref8","open","Math","floor","resultTimesWithDayTimes","initialDays","dayName","fromPairs","objectSpread","singleTimeRangeOpeningToDisplayFormat","sort","descend","_ref9","_ref10","timeInSeconds","utcTime","moment","unix","utc","minutes","format","join","getCurrentDayOfTheWeek","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","clock_ref2","react_default","createElement","d","clock_ref3","clock_ref4","clock_ref5","clock_ref6","clock_ref7","clock_ref8","clock_ref9","clock_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","clock_SvgClock","svgRef","props","id","x","y","width","height","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","greyColor","OpeningTimesHeader","styled","h1","_templateObject","TimesWrapper","div","_templateObject2","TimeRow","_templateObject3","ClosedTime","span","_templateObject4","DayLabel","_templateObject5","DayTimesWrapper","_templateObject6","TodayLabel","_templateObject7","TimesInputWrapper","_templateObject8","ErrorInfo","_templateObject9","show","TimesInput","textarea","_templateObject10","isCorrect","concat","DayTimes","DayTimeOpening","dayLabel","isToday","App_DayTimes","OpeningTimes","currentDayOfTheWeek","openingTimes","App_DayTimeOpening","App","defaultOpeningTimes","_useState","useState","JSON","stringify","_useState2","openingTimesJson","setOpeningTimesJson","_useState3","_useState4","setOpeningTimes","_useState5","_useState6","isJSONCorrect","setIsJSONCorrect","onChange","event","openingTimeObject","parse","e","App_OpeningTimes","Boolean","window","location","hostname","match","console","log","then","t","bind","ReactDOM","render","src_App","default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2767c3c.chunk.js","sourcesContent":["import moment from \"moment\";\nimport {pipe, map, toPairs, flatten, sort, sortBy, prop, filter, zip, groupBy, fromPairs, descend, join} from \"ramda\";\n\nconst secondsInDay = 24 * 3600\n\nexport const daysOfTheWeek = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n\nexport const transformToSortedWeekTimes =\n  pipe(toPairs, map(([day,times]) => map(({type, value}) => ({\n    type,\n    value: value + daysOfTheWeek.indexOf(day) * secondsInDay\n  }), times)), flatten, sortBy(prop('value')))\n\nconst filterByType = filterType => filter(({type}) => type === filterType)\n\nexport const pairCorrespondingOpeningAndClosingTimes = times =>\n  pipe(zip, map(([a, b]) => ({\n    [a.type]: a.value,\n    [b.type]: b.value\n  })))(filterByType('open')(times), filterByType('close')(times))\n\nexport const groupToDayByOpeningTime = times => {\n  const resultTimes = groupBy(({open}) => daysOfTheWeek[Math.floor(open / secondsInDay)], times)\n  const resultTimesWithDayTimes = map(map(map(times => times % secondsInDay)), resultTimes) // converse back times from week to day ones\n  const initialDays = pipe(map((dayName) => [dayName, []]), fromPairs)(daysOfTheWeek)\n  return {\n    ...initialDays,\n    ...resultTimesWithDayTimes\n  }\n}\n\nexport const getOpeningTimes = pipe(transformToSortedWeekTimes, pairCorrespondingOpeningAndClosingTimes, groupToDayByOpeningTime)\n\nconst formatUnixTime = timeInSeconds => {\n  const utcTime = moment.unix(timeInSeconds).utc()\n  if (utcTime.minutes() === 0) {\n    return utcTime.format('h A')\n  } else {\n    return utcTime.format('h:mm A')\n  }\n}\n\nexport const singleTimeRangeOpeningToDisplayFormat = pipe(\n  toPairs,\n  sort(descend(prop(0))),\n  map(([days, times]) => times),\n  map(formatUnixTime),\n  join(' - ')\n)\n\nexport const getCurrentDayOfTheWeek = () => daysOfTheWeek[moment().day() - 1]\n// to shift day by one, as moment treats Sunday as first day of the week","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M587.572,186.881c-32.266-75.225-87.096-129.934-162.949-162.285C386.711,8.427,346.992,0.168,305.497,0.168 c-41.488,0-80.914,8.181-118.784,24.428C111.488,56.861,56.415,111.535,24.092,186.881C7.895,224.629,0,264.176,0,305.664 c0,41.496,7.895,81.371,24.092,119.127c32.323,75.346,87.403,130.348,162.621,162.621c37.877,16.247,77.295,24.42,118.784,24.42 c41.489,0,81.214-8.259,119.12-24.42c75.853-32.352,130.683-87.403,162.956-162.621C603.819,386.914,612,347.16,612,305.664 C612,264.176,603.826,224.757,587.572,186.881z M538.724,440.853c-24.021,41.195-56.929,73.876-98.375,98.039 c-41.195,24.021-86.332,36.135-134.845,36.135c-36.47,0-71.27-7.024-104.4-21.415c-33.129-14.384-61.733-33.294-85.661-57.215 c-23.928-23.928-42.973-52.811-57.214-85.997c-14.199-33.065-21.08-68.258-21.08-104.735c0-48.52,11.921-93.428,35.807-134.509 c23.971-41.231,56.886-73.947,98.039-98.04c41.146-24.092,85.99-36.142,134.502-36.142c48.52,0,93.649,12.121,134.845,36.142 c41.446,24.164,74.283,56.879,98.375,98.039c24.092,41.153,36.135,85.99,36.135,134.509 C574.852,354.185,562.888,399.399,538.724,440.853z\"\n}), React.createElement(\"path\", {\n  d: \"M324.906,302.988V129.659c0-10.372-9.037-18.738-19.41-18.738c-9.701,0-18.403,8.366-18.403,18.738v176.005 c0,0.336,0.671,1.678,0.671,2.678c-0.671,6.024,1.007,11.043,5.019,15.062l100.053,100.046c6.695,6.695,19.073,6.695,25.763,0 c7.694-7.695,7.188-18.86,0-26.099L324.906,302.988z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgClock = function SvgClock(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"612px\",\n    height: \"612px\",\n    viewBox: \"0 0 612 612\",\n    style: {\n      enableBackground: \"new 0 0 612 612\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgClock, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/clock.f8e35baa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport './App.css';\nimport {join, pipe, toPairs, map} from 'ramda'\nimport {getOpeningTimes, singleTimeRangeOpeningToDisplayFormat, getCurrentDayOfTheWeek} from './helpers'\nimport styled from 'styled-components';\nimport { ReactComponent as Clock } from './clock.svg';\n\nconst redColor = 'rgba(200, 10, 10, 1)';\nconst greyColor = 'rgba(32, 33, 37, 0.42)';\n\nconst OpeningTimesHeader = styled.h1`\n  text-align: left;\n  font-size: 24px;\n  line-height: 30px;\n  color: #202125;\n  margin: 0;\n  border-bottom: 1px solid #000000;\n  padding-bottom: 15px;\n  & > svg {\n    width: 16px;\n    height: 16px;\n    fill: ${greyColor};\n    padding: 0 10px 0 3px;\n  }\n`\n\nconst TimesWrapper = styled.div`\n  width: 360px;\n  border-color: ${greyColor};\n  border-width: 1px;\n  border-style: solid;\n  padding: 20px 32px 32px;\n  border-radius: 10px;\n  margin: auto;\n`\n\nconst TimeRow = styled.div`\n  font-size: 16px;\n  color: #202125;\n  font-weight: bold;\n  line-height: 22px;\n  padding: 6px 3px;\n  display: flex;\n  flex-flow: row wrap;\n  border-bottom: 1px solid rgba(32, 33, 37, 0.08);\n`\n\nconst ClosedTime = styled.span`\n  font-weight: 400;\n  color: ${greyColor}\n`\n\nconst DayLabel = styled.span`\n  flex: 50%;\n  text-align: left;\n  text-transform: capitalize;\n`\n\nconst DayTimesWrapper = styled.span`\n  flex: 50%;\n  text-align: right;\n  font-weight: 400;\n`\nconst TodayLabel = styled.span`\n  font-size: 12px;\n  color: rgba(87, 204, 20, 1);\n  text-transform: uppercase;\n  padding-left: 5px;\n`\n\nconst TimesInputWrapper = styled.div`\n  width: 360px;\n  margin: 10px auto;\n  padding: 10px;\n`\n\nconst ErrorInfo = styled.span`\n  font-weight: bold;\n  font-size: 16p;\n  color: ${redColor};\n  ${({ show }) => !show && `\n    visibility: hidden;\n  `}\n`\n\nconst TimesInput = styled.textarea`\n  display: block;\n  width: 100%;\n  height: 360px;\n  ${({ isCorrect }) => !isCorrect && `\n    border: 2px solid ${redColor};\n  `}\n`\n\nconst DayTimes = ({times}) => {\n  if (!times || times.length === 0) {\n    return <ClosedTime>Closed</ClosedTime>\n  } else {\n    return <span>\n      {pipe(\n        map(singleTimeRangeOpeningToDisplayFormat),\n        join(', ')\n      )(times)}\n    </span>\n  }\n}\n\nconst DayTimeOpening = ({dayLabel, times, isToday}) => (\n  <TimeRow>\n    <DayLabel>\n      {dayLabel} { isToday ? <TodayLabel>Today</TodayLabel> : null }\n    </DayLabel>\n    <DayTimesWrapper>\n      <DayTimes times={times} />\n    </DayTimesWrapper>\n  </TimeRow>\n)\n\nconst OpeningTimes = ({currentDayOfTheWeek, openingTimes}) => (\n  <TimesWrapper>\n    <OpeningTimesHeader>\n      <Clock />\n      Opening hours\n    </OpeningTimesHeader>\n    {map(([day, times]) =>\n      <DayTimeOpening\n        dayLabel={day}\n        times={times}\n        isToday={currentDayOfTheWeek===day}\n      />, toPairs(openingTimes))}\n  </TimesWrapper>\n)\n\nfunction App({ defaultOpeningTimes }) {\n  const currentDayOfTheWeek = getCurrentDayOfTheWeek()\n  const [openingTimesJson, setOpeningTimesJson] = useState(JSON.stringify(defaultOpeningTimes, null, 4));\n  const [openingTimes, setOpeningTimes] = useState(defaultOpeningTimes);\n  const [isJSONCorrect, setIsJSONCorrect] = useState(true);\n  return (\n    <div>\n      <TimesInputWrapper>\n        <ErrorInfo show={!isJSONCorrect}>JSON is invalid</ErrorInfo>\n        <TimesInput value={openingTimesJson} isCorrect={isJSONCorrect} onChange={(event) => {\n          setOpeningTimesJson(event.target.value)\n          try {\n            const openingTimeObject = JSON.parse(event.target.value); //also to check if json is valid\n            setOpeningTimes(openingTimeObject)\n            setIsJSONCorrect(true)\n          } catch (e) {\n            setIsJSONCorrect(false)\n          }\n        }}/>\n      </TimesInputWrapper>\n      <OpeningTimes\n        openingTimes={getOpeningTimes(openingTimes)}\n        currentDayOfTheWeek={currentDayOfTheWeek}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('dupa')\nimport('./opening_times.json').then((openingTimesJson) => {\n  ReactDOM.render(<App defaultOpeningTimes={openingTimesJson.default} />, document.getElementById('root'));\n  serviceWorker.unregister();\n})"],"sourceRoot":""}